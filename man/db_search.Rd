% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_search.R
\name{db_search}
\alias{db_search}
\title{Plain Text Database Search}
\usage{
db_search(api_key = NULL, result_type = NULL, search_term = NULL,
  data_source = NULL, food_group = NULL, sort_by = "r",
  max_rows = 50, offset = 0)
}
\arguments{
\item{api_key}{An API key as obtained from the USDA NDB.}

\item{result_type}{The nature of the return result. Supports one of "xml"
and "json"}

\item{search_term}{A plain text string of the desired search term.}

\item{data_source}{A string. One of Branded Food Products and Standard Release.}

\item{food_group}{A string. A specific food_group. See examples below.}

\item{sort_by}{One of `r` for relevance and `n` for name that decides the nature of sorting for the return items.}

\item{max_rows}{The maximum number of rows to return.}

\item{offset}{Determines the starting point for "indexing". Defaults to 0.}
}
\value{
A processed JSON result or xml result as may be requested.
}
\description{
Provides a plain text option to search the database.
}
\examples{
\dontrun{
#set_apikey("key here if not set for the session")
#sorted by relevance
db_search(result_type = "json",search_term = "Acerola",
sort_by = "r")
# sorted by name
db_search(result_type = "json",search_term = "Acerola",
sort_by = "n")
# return xml
res<-db_search(result_type = "xml",search_term = "Acerola",
sort_by = "r")
#process xml
pretty_xml(res, tag="name")
}



}
